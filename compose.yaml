services:
  webserver:
    build:
      context: ${PWD}/.docker
      target: base_symfony_dev
    env_file:
      - .env
      - .docker/.env
    container_name: 'webserver-${CONTAINER_SUFFIX}'
    restart: 'unless-stopped'
    ports:
      - "${PORT_HTTP_EXTERNAL}:${PORT_HTTP_INTERNAL}"
    volumes:
      - ./:/var/www/html
      - ${PWD}/.docker/webserver/conf.d/php.dev.ini:/usr/local/etc/php/php.ini:ro
      - ${PWD}/.docker/webserver/vhosts:/etc/apache2/sites-enabled
    environment:
      XDEBUG_CONFIG: "client_host=host.docker.internal"
      PHP_CS_FIXER_IGNORE_ENV: 1
  ###> doctrine/doctrine-bundle ###
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      # You should definitely change the password in production
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
      POSTGRES_USER: ${POSTGRES_USER:-app}
    healthcheck:
      test: [ "CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}" ]
      timeout: 5s
      retries: 5
      start_period: 60s
    volumes:
      - database_data:/var/lib/postgresql/data:rw
      # You may use a bind-mounted host directory instead, so that it is harder to accidentally remove the volume and lose all your data!
      # - ./docker/db/data:/var/lib/postgresql/data:rw
  ###< doctrine/doctrine-bundle ###
    ports:
      - "${DB_PORT_EXTERNAL:-5432}:${DB_PORT_INTERNAL:-5432}"

volumes:
    database_data:
        driver: local